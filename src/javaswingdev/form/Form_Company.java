/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javaswingdev.form;

    import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author PC
 */
public class Form_Company extends javax.swing.JPanel {
    private final ConnectDB dbConnection;
        private DefaultTableModel tableModel;

    
    /**
     * Creates new form Form_Company
     */
    public Form_Company() {
        initComponents();
        
        initializeTableModel();
        displayDataInTable();
        addTableClickListener();
        
        dbConnection = new ConnectDB();
        dbConnection.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        FonctionResponsable = new javax.swing.JTextField();
        NomResponsable = new javax.swing.JTextField();
        StatutJrd = new javax.swing.JTextField();
        NombreS = new javax.swing.JTextField();
        Domaine = new javax.swing.JTextField();
        AdresseCmp = new javax.swing.JTextField();
        NomCmp = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Supp = new javax.swing.JButton();
        Ajouter = new javax.swing.JButton();
        Modifier = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        IdCmp = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCmp = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Impr = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Nom:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, 40, 20));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Nom ou raison sociale:");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 170, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Adresse:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 70, 20));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Domaine d'activité:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 140, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Statut juridique :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 130, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Nombre de salariés :");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 150, 20));

        jLabel18.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel18.setText("Responsable de l'administration");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, 240, 20));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Fonction :");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, -1, 20));
        add(FonctionResponsable, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 180, 20));
        add(NomResponsable, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 180, 20));
        add(StatutJrd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 180, 20));
        add(NombreS, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 180, 20));
        add(Domaine, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 180, -1));
        add(AdresseCmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 180, -1));

        NomCmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomCmpActionPerformed(evt);
            }
        });
        add(NomCmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 180, -1));

        jLabel20.setFont(new java.awt.Font("Segoe Print", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 204));
        jLabel20.setText("Coordonners de Company");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 102, 255));
        jLabel1.setText("STAGE EN ENTRPRISE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Groupe IPIRNET");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, 30));

        Supp.setBackground(new java.awt.Color(255, 0, 51));
        Supp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Supp.setText("Supprimer");
        Supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuppActionPerformed(evt);
            }
        });
        add(Supp, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 510, 140, 50));

        Ajouter.setBackground(new java.awt.Color(51, 255, 0));
        Ajouter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Ajouter.setText("Insérer");
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });
        add(Ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 140, 50));

        Modifier.setBackground(new java.awt.Color(0, 51, 255));
        Modifier.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Modifier.setText("Modifier");
        Modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ModifierMouseClicked(evt);
            }
        });
        Modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierActionPerformed(evt);
            }
        });
        add(Modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 140, 50));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Id:");
        add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 40, 20));

        IdCmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdCmpActionPerformed(evt);
            }
        });
        add(IdCmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 180, -1));

        jLabel32.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 0, 204));
        jLabel32.setText("Donnee Company");
        add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 120, -1, 50));

        TableCmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableCmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCmpMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableCmp);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 320, 460));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 730, 270));

        Impr.setBackground(new java.awt.Color(0, 204, 255));
        Impr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Impr.setText("Imprimer");
        Impr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprActionPerformed(evt);
            }
        });
        add(Impr, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 600, 140, 50));
    }// </editor-fold>//GEN-END:initComponents

        // Table
    private void initializeTableModel() {
        tableModel = new DefaultTableModel();
        tableModel.addColumn("ID");
        tableModel.addColumn("NomCmp");
        tableModel.addColumn("Adresse");
        tableModel.addColumn("Domaine");
        tableModel.addColumn("StatutJrd");
        tableModel.addColumn("NombreS");
        tableModel.addColumn("NomResponsable");
        tableModel.addColumn("FonctionResponsable");
        TableCmp.setModel(tableModel);
    }

    private void updateTableModel() {
        tableModel.setRowCount(0); // Clear existing rows
        ConnectDB con = ConnectDB.getcon();
        con.connect();

        try {
            String sqlQuery = "SELECT * FROM Company";
            ResultSet rs = con.executeQuery(sqlQuery);

            while (rs.next()) {
                Object[] rowData = {
                    rs.getInt("IdCmp"),
                    rs.getString("NomCmp"),
                    rs.getString("AdresseCmp"),
                    rs.getString("Domaine"),
                    rs.getString("StatutJrd"),
                    rs.getString("NombreS"),
                    rs.getString("NomResponsable"),
                    rs.getString("FonctionResponsable")
                };
                tableModel.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Form_Company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void addTableClickListener() {
        TableCmp.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = TableCmp.getSelectedRow();
                    if (selectedRow != -1) { // Ensure a row is selected
                        Object idCmpObj = TableCmp.getValueAt(selectedRow, 0);
                        Object nomCmpObj = TableCmp.getValueAt(selectedRow, 1);
                        Object adresseCmpObj = TableCmp.getValueAt(selectedRow, 2);
                        Object domaineObj = TableCmp.getValueAt(selectedRow, 3);    
                        Object statutJrdObj = TableCmp.getValueAt(selectedRow, 4);
                        Object nombreSObj = TableCmp.getValueAt(selectedRow, 5);
                        Object nomResponsableObj = TableCmp.getValueAt(selectedRow, 6);    
                        Object fonctionResponsableObj = TableCmp.getValueAt(selectedRow, 7);
                        
                        // Check for null values before converting to string
                        String idCmp = idCmpObj != null ? idCmpObj.toString() : "";
                        String nomCmp = nomCmpObj != null ? nomCmpObj.toString() : "";
                        String adresseCmp = adresseCmpObj != null ? adresseCmpObj.toString() : "";
                        String domaine = domaineObj != null ? domaineObj.toString() : "";
                        String statutJrd = statutJrdObj != null ? statutJrdObj.toString() : "";
                        String nombreS = nombreSObj != null ? nombreSObj.toString() : "";
                        String nomResponsable = nomResponsableObj != null ? nomResponsableObj.toString() : "";
                        String fonctionResponsable = fonctionResponsableObj != null ? fonctionResponsableObj.toString() : "";
                        
                        IdCmp.setText(idCmp);
                        NomCmp.setText(nomCmp);
                        AdresseCmp.setText(adresseCmp);
                        Domaine.setText(domaine);
                        StatutJrd.setText(statutJrd);
                        NombreS.setText(nombreS);
                        NomResponsable.setText(nomResponsable);
                        FonctionResponsable.setText(fonctionResponsable);
                    }
                }
            }
        });
    }
    
     private void displayDataInTable() {
        ConnectDB con = ConnectDB.getcon();
        con.connect();

        try {
            String sqlQuery = "SELECT * FROM Company";
            ResultSet rs = con.executeQuery(sqlQuery);


            while (rs.next()) {
                Object[] rowData = {
                    rs.getInt("IdCmp"),
                    rs.getString("NomCmp"),
                    rs.getString("AdresseCmp"),
                    rs.getString("Domaine"),
                    rs.getString("StatutJrd"),
                    rs.getString("NombreS"),
                    rs.getString("NomResponsable"),
                    rs.getString("FonctionResponsable")
                };
                 tableModel.addRow(rowData);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Form_Stagiaire.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     // Table END 
   
    
    private void NomCmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomCmpActionPerformed

    }//GEN-LAST:event_NomCmpActionPerformed

    private void SuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuppActionPerformed
            String idToDelete = IdCmp.getText(); // Get ID from text field or wherever it's stored

            ConnectDB con = ConnectDB.getcon(); 
            try {
                con.deletecmp(idToDelete); // Call the delete method
                updateTableModel(); 
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression de la compagnie : " + ex.getMessage(), "Erreur SQL", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Form_Company.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_SuppActionPerformed

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        CompanyBean cb=new CompanyBean();
            int idCmp;
        try { 
            idCmp = Integer.parseInt(IdCmp.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erreur : Veuillez entrer un entier pour IdCmp.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if parsing fails
        }
        cb.setIdCmp(idCmp);
            cb.setNomCmp(NomCmp.getText());
            cb.setAdresseCmp(AdresseCmp.getText());
            cb.setDomaine(Domaine.getText());
            cb.setStatutJrd(StatutJrd.getText());
            cb.setNomResponsable(NomResponsable.getText());
            cb.setFonctionResponsable(FonctionResponsable.getText());
            cb.setNombreS(NombreS.getText());

            ConnectDB con = ConnectDB.getcon();
                try {
            con.connect();
            con.ajoutercmp(cb);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout de la compagnie : " + ex.getMessage(), "Erreur SQL", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Form_Company.class.getName()).log(Level.SEVERE, null, ex);

        }
         updateTableModel();    
    }//GEN-LAST:event_AjouterActionPerformed

    private void ModifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModifierMouseClicked

    }//GEN-LAST:event_ModifierMouseClicked

    private void ModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierActionPerformed
        CompanyBean cb=new CompanyBean();
            int idCmp;
        try { 
            idCmp = Integer.parseInt(IdCmp.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erreur : Veuillez entrer un entier pour IdCmp.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if parsing fails
        }
        cb.setIdCmp(idCmp);
            cb.setNomCmp(NomCmp.getText());
            cb.setAdresseCmp(AdresseCmp.getText());
            cb.setDomaine(Domaine.getText());
            cb.setStatutJrd(StatutJrd.getText());
            cb.setNomResponsable(NomResponsable.getText());
            cb.setFonctionResponsable(FonctionResponsable.getText());
            cb.setNombreS(NombreS.getText());
            
            ConnectDB con = ConnectDB.getcon(); 
            try {
                con.connect();
                con.modifiercmp(cb); // Call the modifierstg method
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erreur lors de la modification de la compagnie : " + ex.getMessage(), "Erreur SQL", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Form_Company.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateTableModel(); 
    }//GEN-LAST:event_ModifierActionPerformed

    private void IdCmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdCmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdCmpActionPerformed

    private void TableCmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCmpMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TableCmpMouseClicked

    private void ImprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprActionPerformed
        try {
            // Load the JasperReport template
            JasperDesign jasdi = JRXmlLoader.load("C:\\Users\\PC\\JaspersoftWorkspace\\MyReports\\Company.jrxml");

            // Construct the SQL query dynamically based on the selected rows
            String sql =  "SELECT * FROM Company";
JRDesignQuery newQuery = new JRDesignQuery();
        newQuery.setText(sql);
        jasdi.setQuery(newQuery);

        // Compile the JasperReport template
        JasperReport js = JasperCompileManager.compileReport(jasdi);

        // Provide a database connection (replace 'con' with your actual Connection object)
        ConnectDB con = ConnectDB.getcon();

        // Fill the JasperReport with data
        JasperPrint jd = JasperFillManager.fillReport(js, null, dbConnection.con);

        // Show the report in a JasperViewer
        JasperViewer.viewReport(jd, false);

    } catch (JRException ex) {
        JOptionPane.showMessageDialog(null, "Erreur lors de la génération du rapport : " + ex.getMessage(), "Erreur JasperReport", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(Form_Company.class.getName()).log(Level.SEVERE, null, ex);
        ex.printStackTrace();
    }
    }//GEN-LAST:event_ImprActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdresseCmp;
    private javax.swing.JButton Ajouter;
    private javax.swing.JTextField Domaine;
    private javax.swing.JTextField FonctionResponsable;
    private javax.swing.JTextField IdCmp;
    private javax.swing.JButton Impr;
    private javax.swing.JButton Modifier;
    private javax.swing.JTextField NomCmp;
    private javax.swing.JTextField NomResponsable;
    private javax.swing.JTextField NombreS;
    private javax.swing.JTextField StatutJrd;
    private javax.swing.JButton Supp;
    private javax.swing.JTable TableCmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
